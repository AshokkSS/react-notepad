{"ast":null,"code":"var _jsxFileName = \"/Users/ashokksaravanabavan/Documents/react-notepad-1/src/components/container/NotesContainer/NotesContainer.jsx\",\n  _s = $RefreshSig$();\nimport Note from \"../../presentational/Note\";\nimport NoteForm from \"../NoteForm\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport randomColor from \"randomcolor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotesContainer = () => {\n  _s();\n  const storedItems = JSON.parse(localStorage.getItem(\"notes\"));\n  const [notes, setNotes] = useState(storedItems);\n  const [dateType, setDateType] = useState(false);\n  const [editingNote, setEditingNote] = useState(null);\n  const [filterState, setFilterState] = useState(0);\n  const filterStates = [null, \"Memo\", \"Reminder\", \"Birthday\"];\n  const filterLabels = [\"Showing All Notes\", \"Showing Memos\", \"Showing Reminders\", \"Showing Birthdays\"];\n  const toggleCategoryFilter = () => {\n    setFilterState(prevFilterState => (prevFilterState + 1) % filterStates.length);\n  };\n  const displayedNotes = notes.filter(note => filterStates[filterState] === null ? true : note.category === filterStates[filterState]);\n  const categoriseNotes = notes => {\n    const categories = {};\n    notes.forEach(note => {\n      const category = note.category || \"No Category\";\n      if (!categories[category]) {\n        categories[category] = [];\n      }\n      categories[category].push(note);\n    });\n    console.log(categories);\n    return categories;\n  };\n  const categorisedNotes = categoriseNotes(notes);\n  const handleFormSubmit = (title, content, date, color, category) => {\n    const newNote = {\n      id: new Date().getTime(),\n      title,\n      content,\n      date,\n      color,\n      category\n    };\n    setNotes([...notes, newNote]);\n  };\n  const handleDelete = id => {\n    setNotes(notes.filter(note => note.id !== id));\n  };\n  const toggleDate = () => {\n    setDateType(prevState => !prevState);\n  };\n  const handleFormEdit = (id, title, content, date, color, category) => {\n    const editedNote = {\n      id,\n      title,\n      content,\n      date,\n      color,\n      category\n    };\n    const newNotes = notes.map(note => {\n      if (note.id === id) {\n        return editedNote;\n      } else {\n        return note;\n      }\n    });\n    setNotes(newNotes);\n  };\n  const startEditing = note => {\n    setEditingNote(note);\n  };\n  const randomiseColor = () => {\n    const newNotes = notes.map(note => {\n      let colour = note.category ? note.color : randomColor();\n      return {\n        ...note,\n        color: colour\n      };\n    });\n    setNotes(newNotes);\n  };\n  useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n  const handleDuplicate = id => {\n    const noteToDuplicate = notes.find(note => note.id === id);\n    const newNote = {\n      id: new Date().getTime(),\n      title: noteToDuplicate.title,\n      content: noteToDuplicate.content,\n      date: noteToDuplicate.date,\n      color: noteToDuplicate.color,\n      category: noteToDuplicate.category\n    };\n    setNotes([...notes, newNote]);\n  };\n  const deleteAllNotes = () => {\n    if (window.confirm(\"Are you sure you want to delete all notes?\")) {\n      setNotes([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(FormWrapper, {\n      children: /*#__PURE__*/_jsxDEV(NoteForm, {\n        onFormSubmit: handleFormSubmit,\n        onFormEdit: handleFormEdit,\n        editingNote: editingNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), notes.length > 0 ? /*#__PURE__*/_jsxDEV(NotesGridWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        children: /*#__PURE__*/_jsxDEV(NavLinks, {\n          children: [/*#__PURE__*/_jsxDEV(NavLink, {\n            onClick: toggleDate,\n            children: dateType ? \"Toggle to Descending Date\" : \"Toggle to Ascending Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n            onClick: randomiseColor,\n            children: \"Randomise Colours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n            onClick: toggleCategoryFilter,\n            children: filterLabels[filterState]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n            onClick: deleteAllNotes,\n            children: \"Delete All Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), filterStates[filterState] === null ? Object.keys(categorisedNotes).map(category => /*#__PURE__*/_jsxDEV(CategoryContainer, {\n        children: [/*#__PURE__*/_jsxDEV(CategoryHeading, {\n          children: [category, \" Notes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(NotesGrid, {\n          children: categorisedNotes[category].sort((a, b) => dateType ? new Date(a.date) - new Date(b.date) : new Date(b.date) - new Date(a.date)).map(note => /*#__PURE__*/_jsxDEV(Note, {\n            id: note.id,\n            onDelete: handleDelete,\n            onStartEditing: () => startEditing(note),\n            onDuplicate: handleDuplicate,\n            title: note.title,\n            date: note.date,\n            content: note.content,\n            color: note.color,\n            category: note.category\n          }, note.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 23\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, this)]\n      }, category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(CategoryHeading, {\n          children: filterLabels[filterState]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(NotesGrid, {\n          children: displayedNotes.sort((a, b) => dateType ? new Date(a.date) - new Date(b.date) : new Date(b.date) - new Date(a.date)).map(note => /*#__PURE__*/_jsxDEV(Note, {\n            id: note.id,\n            onDelete: handleDelete,\n            onStartEditing: () => startEditing(note),\n            onDuplicate: handleDuplicate,\n            title: note.title,\n            date: note.date,\n            content: note.content,\n            color: note.color,\n            category: note.category\n          }, note.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CategoryHeading, {\n      children: \"No notes saved!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(NotesContainer, \"dkN56H+gyTPOT+ciDHVbCX7mn7w=\");\n_c = NotesContainer;\nexport default NotesContainer;\nconst CategoryContainer = styled.div`\n  margin: 20px 0;\n`;\n_c2 = CategoryContainer;\nconst CategoryHeading = styled.h2`\n  margin-left: 40px;\n`;\n_c3 = CategoryHeading;\nconst Navbar = styled.nav`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  padding: 10px 20px;\n  width: 100%;\n  background-color: pink;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n_c4 = Navbar;\nconst NavLinks = styled.ul`\n  list-style: none;\n  display: flex;\n  justify-content: space-between;\n  width: calc(\n    100% - 140px\n  ); /* Subtracting the left and right padding of NotesGrid */\n  padding: 0 40px; /* Matching padding with NotesGrid */\n`;\n_c5 = NavLinks;\nconst NavLink = styled.li`\n  flex-grow: 1;\n  text-align: left;\n  color: #fff;\n  cursor: pointer;\n`;\n_c6 = NavLink;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n_c7 = Container;\nconst FormWrapper = styled.div`\n  // margin-right: 20px;\n`;\n_c8 = FormWrapper;\nconst NotesGridWrapper = styled.div`\n  flex-grow: 1;\n  // margin-left: 20px;\n`;\n_c9 = NotesGridWrapper;\nconst NotesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(auto-fit, minmax(240px, 1fr));\n  grid-gap: 20px;\n  height: 100%;\n  padding: 20px; /* This padding should be matched in NavLinks */\n\n  @media screen and (max-width: 1600px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n_c10 = NotesGrid;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"NotesContainer\");\n$RefreshReg$(_c2, \"CategoryContainer\");\n$RefreshReg$(_c3, \"CategoryHeading\");\n$RefreshReg$(_c4, \"Navbar\");\n$RefreshReg$(_c5, \"NavLinks\");\n$RefreshReg$(_c6, \"NavLink\");\n$RefreshReg$(_c7, \"Container\");\n$RefreshReg$(_c8, \"FormWrapper\");\n$RefreshReg$(_c9, \"NotesGridWrapper\");\n$RefreshReg$(_c10, \"NotesGrid\");","map":{"version":3,"names":["Note","NoteForm","React","useState","useEffect","styled","randomColor","jsxDEV","_jsxDEV","NotesContainer","_s","storedItems","JSON","parse","localStorage","getItem","notes","setNotes","dateType","setDateType","editingNote","setEditingNote","filterState","setFilterState","filterStates","filterLabels","toggleCategoryFilter","prevFilterState","length","displayedNotes","filter","note","category","categoriseNotes","categories","forEach","push","console","log","categorisedNotes","handleFormSubmit","title","content","date","color","newNote","id","Date","getTime","handleDelete","toggleDate","prevState","handleFormEdit","editedNote","newNotes","map","startEditing","randomiseColor","colour","setItem","stringify","handleDuplicate","noteToDuplicate","find","deleteAllNotes","window","confirm","Container","children","FormWrapper","onFormSubmit","onFormEdit","fileName","_jsxFileName","lineNumber","columnNumber","NotesGridWrapper","Navbar","NavLinks","NavLink","onClick","Object","keys","CategoryContainer","CategoryHeading","NotesGrid","sort","a","b","onDelete","onStartEditing","onDuplicate","_c","div","_c2","h2","_c3","nav","_c4","ul","_c5","li","_c6","_c7","_c8","_c9","_c10","$RefreshReg$"],"sources":["/Users/ashokksaravanabavan/Documents/react-notepad-1/src/components/container/NotesContainer/NotesContainer.jsx"],"sourcesContent":["import Note from \"../../presentational/Note\";\nimport NoteForm from \"../NoteForm\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport randomColor from \"randomcolor\";\n\nconst NotesContainer = () => {\n  const storedItems = JSON.parse(localStorage.getItem(\"notes\"));\n  const [notes, setNotes] = useState(storedItems);\n  const [dateType, setDateType] = useState(false);\n  const [editingNote, setEditingNote] = useState(null);\n  const [filterState, setFilterState] = useState(0);\n\n  const filterStates = [null, \"Memo\", \"Reminder\", \"Birthday\"];\n  const filterLabels = [\n    \"Showing All Notes\",\n    \"Showing Memos\",\n    \"Showing Reminders\",\n    \"Showing Birthdays\"\n  ];\n\n  const toggleCategoryFilter = () => {\n    setFilterState(\n      (prevFilterState) => (prevFilterState + 1) % filterStates.length\n    );\n  };\n\n  const displayedNotes = notes.filter((note) =>\n    filterStates[filterState] === null\n      ? true\n      : note.category === filterStates[filterState]\n  );\n  const categoriseNotes = (notes) => {\n    const categories = {};\n\n    notes.forEach((note) => {\n      const category = note.category || \"No Category\";\n      if (!categories[category]) {\n        categories[category] = [];\n      }\n      categories[category].push(note);\n    });\n    console.log(categories);\n    return categories;\n  };\n\n  const categorisedNotes = categoriseNotes(notes);\n\n  const handleFormSubmit = (title, content, date, color, category) => {\n    const newNote = {\n      id: new Date().getTime(),\n      title,\n      content,\n      date,\n      color,\n      category\n    };\n\n    setNotes([...notes, newNote]);\n  };\n  const handleDelete = (id) => {\n    setNotes(notes.filter((note) => note.id !== id));\n  };\n\n  const toggleDate = () => {\n    setDateType((prevState) => !prevState);\n  };\n\n  const handleFormEdit = (id, title, content, date, color, category) => {\n    const editedNote = {\n      id,\n      title,\n      content,\n      date,\n      color,\n      category\n    };\n\n    const newNotes = notes.map((note) => {\n      if (note.id === id) {\n        return editedNote;\n      } else {\n        return note;\n      }\n    });\n    setNotes(newNotes);\n  };\n\n  const startEditing = (note) => {\n    setEditingNote(note);\n  };\n\n  const randomiseColor = () => {\n    const newNotes = notes.map((note) => {\n      let colour = note.category ? note.color : randomColor();\n      return {\n        ...note,\n        color: colour\n      };\n    });\n    setNotes(newNotes);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  const handleDuplicate = (id) => {\n    const noteToDuplicate = notes.find((note) => note.id === id);\n    const newNote = {\n      id: new Date().getTime(),\n      title: noteToDuplicate.title,\n      content: noteToDuplicate.content,\n      date: noteToDuplicate.date,\n      color: noteToDuplicate.color,\n      category: noteToDuplicate.category\n    };\n    setNotes([...notes, newNote]);\n  };\n  const deleteAllNotes = () => {\n    if (window.confirm(\"Are you sure you want to delete all notes?\")) {\n      setNotes([]);\n    }\n  };\n  return (\n    <Container>\n      <FormWrapper>\n        <NoteForm\n          onFormSubmit={handleFormSubmit}\n          onFormEdit={handleFormEdit}\n          editingNote={editingNote}\n        />\n      </FormWrapper>\n\n      {notes.length > 0 ? (\n        <NotesGridWrapper>\n          <Navbar>\n            <NavLinks>\n              <NavLink onClick={toggleDate}>\n                {dateType\n                  ? \"Toggle to Descending Date\"\n                  : \"Toggle to Ascending Date\"}\n              </NavLink>\n              <NavLink onClick={randomiseColor}>Randomise Colours</NavLink>\n              <NavLink onClick={toggleCategoryFilter}>\n                {filterLabels[filterState]}\n              </NavLink>\n              <NavLink onClick={deleteAllNotes}>Delete All Notes</NavLink>\n            </NavLinks>\n          </Navbar>\n          {filterStates[filterState] === null ? (\n            Object.keys(categorisedNotes).map((category) => (\n              <CategoryContainer key={category}>\n                <CategoryHeading>{category} Notes</CategoryHeading>\n                <NotesGrid>\n                  {categorisedNotes[category]\n                    .sort((a, b) =>\n                      dateType\n                        ? new Date(a.date) - new Date(b.date)\n                        : new Date(b.date) - new Date(a.date)\n                    )\n                    .map((note) => (\n                      <Note\n                        key={note.id}\n                        id={note.id}\n                        onDelete={handleDelete}\n                        onStartEditing={() => startEditing(note)}\n                        onDuplicate={handleDuplicate}\n                        title={note.title}\n                        date={note.date}\n                        content={note.content}\n                        color={note.color}\n                        category={note.category}\n                      />\n                    ))}\n                </NotesGrid>\n              </CategoryContainer>\n            ))\n          ) : (\n            <div>\n              <CategoryHeading>{filterLabels[filterState]}</CategoryHeading>\n              <NotesGrid>\n                {displayedNotes\n                  .sort((a, b) =>\n                    dateType\n                      ? new Date(a.date) - new Date(b.date)\n                      : new Date(b.date) - new Date(a.date)\n                  )\n                  .map((note) => (\n                    <Note\n                      key={note.id}\n                      id={note.id}\n                      onDelete={handleDelete}\n                      onStartEditing={() => startEditing(note)}\n                      onDuplicate={handleDuplicate}\n                      title={note.title}\n                      date={note.date}\n                      content={note.content}\n                      color={note.color}\n                      category={note.category}\n                    />\n                  ))}\n              </NotesGrid>\n            </div>\n          )}\n        </NotesGridWrapper>\n      ) : (\n        <CategoryHeading>No notes saved!</CategoryHeading>\n      )}\n    </Container>\n  );\n};\n\nexport default NotesContainer;\n\nconst CategoryContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst CategoryHeading = styled.h2`\n  margin-left: 40px;\n`;\n\nconst Navbar = styled.nav`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  padding: 10px 20px;\n  width: 100%;\n  background-color: pink;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n\nconst NavLinks = styled.ul`\n  list-style: none;\n  display: flex;\n  justify-content: space-between;\n  width: calc(\n    100% - 140px\n  ); /* Subtracting the left and right padding of NotesGrid */\n  padding: 0 40px; /* Matching padding with NotesGrid */\n`;\n\nconst NavLink = styled.li`\n  flex-grow: 1;\n  text-align: left;\n  color: #fff;\n  cursor: pointer;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst FormWrapper = styled.div`\n  // margin-right: 20px;\n`;\n\nconst NotesGridWrapper = styled.div`\n  flex-grow: 1;\n  // margin-left: 20px;\n`;\n\nconst NotesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(auto-fit, minmax(240px, 1fr));\n  grid-gap: 20px;\n  height: 100%;\n  padding: 20px; /* This padding should be matched in NavLinks */\n\n  @media screen and (max-width: 1600px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// randomColor by David Merfield under the CC0 license\n// https://github.com/davidmerfield/randomColor/\n\n;\n(function (root, factory) {\n  // Support CommonJS\n  if (typeof exports === 'object') {\n    var randomColor = factory();\n\n    // Support NodeJS & Component, which allow module.exports to be a function\n    if (typeof module === 'object' && module && module.exports) {\n      exports = module.exports = randomColor;\n    }\n\n    // Support CommonJS 1.1.1 spec\n    exports.randomColor = randomColor;\n\n    // Support AMD\n  } else if (typeof define === 'function' && define.amd) {\n    define([], factory);\n\n    // Support vanilla script loading\n  } else {\n    root.randomColor = factory();\n  }\n})(this, function () {\n  // Seed to get repeatable colors\n  var seed = null;\n\n  // Shared color dictionary\n  var colorDictionary = {};\n\n  // Populate the color dictionary\n  loadColorBounds();\n\n  // check if a range is taken\n  var colorRanges = [];\n  var randomColor = function randomColor(options) {\n    options = options || {};\n\n    // Check if there is a seed and ensure it's an\n    // integer. Otherwise, reset the seed value.\n    if (options.seed !== undefined && options.seed !== null && options.seed === parseInt(options.seed, 10)) {\n      seed = options.seed;\n\n      // A string was passed as a seed\n    } else if (typeof options.seed === 'string') {\n      seed = stringToInteger(options.seed);\n\n      // Something was passed as a seed but it wasn't an integer or string\n    } else if (options.seed !== undefined && options.seed !== null) {\n      throw new TypeError('The seed value must be an integer or string');\n\n      // No seed, reset the value outside.\n    } else {\n      seed = null;\n    }\n    var H, S, B;\n\n    // Check if we need to generate multiple colors\n    if (options.count !== null && options.count !== undefined) {\n      var totalColors = options.count,\n        colors = [];\n      // Value false at index i means the range i is not taken yet.\n      for (var i = 0; i < options.count; i++) {\n        colorRanges.push(false);\n      }\n      options.count = null;\n      while (totalColors > colors.length) {\n        var color = randomColor(options);\n        if (seed !== null) {\n          options.seed = seed;\n        }\n        colors.push(color);\n      }\n      options.count = totalColors;\n      return colors;\n    }\n\n    // First we pick a hue (H)\n    H = pickHue(options);\n\n    // Then use H to determine saturation (S)\n    S = pickSaturation(H, options);\n\n    // Then use S and H to determine brightness (B).\n    B = pickBrightness(H, S, options);\n\n    // Then we return the HSB color in the desired format\n    return setFormat([H, S, B], options);\n  };\n  function pickHue(options) {\n    if (colorRanges.length > 0) {\n      var hueRange = getRealHueRange(options.hue);\n      var hue = randomWithin(hueRange);\n\n      //Each of colorRanges.length ranges has a length equal approximatelly one step\n      var step = (hueRange[1] - hueRange[0]) / colorRanges.length;\n      var j = parseInt((hue - hueRange[0]) / step);\n\n      //Check if the range j is taken\n      if (colorRanges[j] === true) {\n        j = (j + 2) % colorRanges.length;\n      } else {\n        colorRanges[j] = true;\n      }\n      var min = (hueRange[0] + j * step) % 359,\n        max = (hueRange[0] + (j + 1) * step) % 359;\n      hueRange = [min, max];\n      hue = randomWithin(hueRange);\n      if (hue < 0) {\n        hue = 360 + hue;\n      }\n      return hue;\n    } else {\n      var hueRange = getHueRange(options.hue);\n      hue = randomWithin(hueRange);\n      // Instead of storing red as two seperate ranges,\n      // we group them, using negative numbers\n      if (hue < 0) {\n        hue = 360 + hue;\n      }\n      return hue;\n    }\n  }\n  function pickSaturation(hue, options) {\n    if (options.hue === 'monochrome') {\n      return 0;\n    }\n    if (options.luminosity === 'random') {\n      return randomWithin([0, 100]);\n    }\n    var saturationRange = getSaturationRange(hue);\n    var sMin = saturationRange[0],\n      sMax = saturationRange[1];\n    switch (options.luminosity) {\n      case 'bright':\n        sMin = 55;\n        break;\n      case 'dark':\n        sMin = sMax - 10;\n        break;\n      case 'light':\n        sMax = 55;\n        break;\n    }\n    return randomWithin([sMin, sMax]);\n  }\n  function pickBrightness(H, S, options) {\n    var bMin = getMinimumBrightness(H, S),\n      bMax = 100;\n    switch (options.luminosity) {\n      case 'dark':\n        bMax = bMin + 20;\n        break;\n      case 'light':\n        bMin = (bMax + bMin) / 2;\n        break;\n      case 'random':\n        bMin = 0;\n        bMax = 100;\n        break;\n    }\n    return randomWithin([bMin, bMax]);\n  }\n  function setFormat(hsv, options) {\n    switch (options.format) {\n      case 'hsvArray':\n        return hsv;\n      case 'hslArray':\n        return HSVtoHSL(hsv);\n      case 'hsl':\n        var hsl = HSVtoHSL(hsv);\n        return 'hsl(' + hsl[0] + ', ' + hsl[1] + '%, ' + hsl[2] + '%)';\n      case 'hsla':\n        var hslColor = HSVtoHSL(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'hsla(' + hslColor[0] + ', ' + hslColor[1] + '%, ' + hslColor[2] + '%, ' + alpha + ')';\n      case 'rgbArray':\n        return HSVtoRGB(hsv);\n      case 'rgb':\n        var rgb = HSVtoRGB(hsv);\n        return 'rgb(' + rgb.join(', ') + ')';\n      case 'rgba':\n        var rgbColor = HSVtoRGB(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'rgba(' + rgbColor.join(', ') + ', ' + alpha + ')';\n      default:\n        return HSVtoHex(hsv);\n    }\n  }\n  function getMinimumBrightness(H, S) {\n    var lowerBounds = getColorInfo(H).lowerBounds;\n    for (var i = 0; i < lowerBounds.length - 1; i++) {\n      var s1 = lowerBounds[i][0],\n        v1 = lowerBounds[i][1];\n      var s2 = lowerBounds[i + 1][0],\n        v2 = lowerBounds[i + 1][1];\n      if (S >= s1 && S <= s2) {\n        var m = (v2 - v1) / (s2 - s1),\n          b = v1 - m * s1;\n        return m * S + b;\n      }\n    }\n    return 0;\n  }\n  function getHueRange(colorInput) {\n    if (typeof parseInt(colorInput) === 'number') {\n      var number = parseInt(colorInput);\n      if (number < 360 && number > 0) {\n        return [number, number];\n      }\n    }\n    if (typeof colorInput === 'string') {\n      if (colorDictionary[colorInput]) {\n        var color = colorDictionary[colorInput];\n        if (color.hueRange) {\n          return color.hueRange;\n        }\n      } else if (colorInput.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        var hue = HexToHSB(colorInput)[0];\n        return [hue, hue];\n      }\n    }\n    return [0, 360];\n  }\n  function getSaturationRange(hue) {\n    return getColorInfo(hue).saturationRange;\n  }\n  function getColorInfo(hue) {\n    // Maps red colors to make picking hue easier\n    if (hue >= 334 && hue <= 360) {\n      hue -= 360;\n    }\n    for (var colorName in colorDictionary) {\n      var color = colorDictionary[colorName];\n      if (color.hueRange && hue >= color.hueRange[0] && hue <= color.hueRange[1]) {\n        return colorDictionary[colorName];\n      }\n    }\n    return 'Color not found';\n  }\n  function randomWithin(range) {\n    if (seed === null) {\n      //generate random evenly destinct number from : https://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/\n      var golden_ratio = 0.618033988749895;\n      var r = Math.random();\n      r += golden_ratio;\n      r %= 1;\n      return Math.floor(range[0] + r * (range[1] + 1 - range[0]));\n    } else {\n      //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n      var max = range[1] || 1;\n      var min = range[0] || 0;\n      seed = (seed * 9301 + 49297) % 233280;\n      var rnd = seed / 233280.0;\n      return Math.floor(min + rnd * (max - min));\n    }\n  }\n  function HSVtoHex(hsv) {\n    var rgb = HSVtoRGB(hsv);\n    function componentToHex(c) {\n      var hex = c.toString(16);\n      return hex.length == 1 ? '0' + hex : hex;\n    }\n    var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n    return hex;\n  }\n  function defineColor(name, hueRange, lowerBounds) {\n    var sMin = lowerBounds[0][0],\n      sMax = lowerBounds[lowerBounds.length - 1][0],\n      bMin = lowerBounds[lowerBounds.length - 1][1],\n      bMax = lowerBounds[0][1];\n    colorDictionary[name] = {\n      hueRange: hueRange,\n      lowerBounds: lowerBounds,\n      saturationRange: [sMin, sMax],\n      brightnessRange: [bMin, bMax]\n    };\n  }\n  function loadColorBounds() {\n    defineColor('monochrome', null, [[0, 0], [100, 0]]);\n    defineColor('red', [-26, 18], [[20, 100], [30, 92], [40, 89], [50, 85], [60, 78], [70, 70], [80, 60], [90, 55], [100, 50]]);\n    defineColor('orange', [18, 46], [[20, 100], [30, 93], [40, 88], [50, 86], [60, 85], [70, 70], [100, 70]]);\n    defineColor('yellow', [46, 62], [[25, 100], [40, 94], [50, 89], [60, 86], [70, 84], [80, 82], [90, 80], [100, 75]]);\n    defineColor('green', [62, 178], [[30, 100], [40, 90], [50, 85], [60, 81], [70, 74], [80, 64], [90, 50], [100, 40]]);\n    defineColor('blue', [178, 257], [[20, 100], [30, 86], [40, 80], [50, 74], [60, 60], [70, 52], [80, 44], [90, 39], [100, 35]]);\n    defineColor('purple', [257, 282], [[20, 100], [30, 87], [40, 79], [50, 70], [60, 65], [70, 59], [80, 52], [90, 45], [100, 42]]);\n    defineColor('pink', [282, 334], [[20, 100], [30, 90], [40, 86], [60, 84], [80, 80], [90, 75], [100, 73]]);\n  }\n  function HSVtoRGB(hsv) {\n    // this doesn't work for the values of 0 and 360\n    // here's the hacky fix\n    var h = hsv[0];\n    if (h === 0) {\n      h = 1;\n    }\n    if (h === 360) {\n      h = 359;\n    }\n\n    // Rebase the h,s,v values\n    h = h / 360;\n    var s = hsv[1] / 100,\n      v = hsv[2] / 100;\n    var h_i = Math.floor(h * 6),\n      f = h * 6 - h_i,\n      p = v * (1 - s),\n      q = v * (1 - f * s),\n      t = v * (1 - (1 - f) * s),\n      r = 256,\n      g = 256,\n      b = 256;\n    switch (h_i) {\n      case 0:\n        r = v;\n        g = t;\n        b = p;\n        break;\n      case 1:\n        r = q;\n        g = v;\n        b = p;\n        break;\n      case 2:\n        r = p;\n        g = v;\n        b = t;\n        break;\n      case 3:\n        r = p;\n        g = q;\n        b = v;\n        break;\n      case 4:\n        r = t;\n        g = p;\n        b = v;\n        break;\n      case 5:\n        r = v;\n        g = p;\n        b = q;\n        break;\n    }\n    var result = [Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255)];\n    return result;\n  }\n  function HexToHSB(hex) {\n    hex = hex.replace(/^#/, '');\n    hex = hex.length === 3 ? hex.replace(/(.)/g, '$1$1') : hex;\n    var red = parseInt(hex.substr(0, 2), 16) / 255,\n      green = parseInt(hex.substr(2, 2), 16) / 255,\n      blue = parseInt(hex.substr(4, 2), 16) / 255;\n    var cMax = Math.max(red, green, blue),\n      delta = cMax - Math.min(red, green, blue),\n      saturation = cMax ? delta / cMax : 0;\n    switch (cMax) {\n      case red:\n        return [60 * ((green - blue) / delta % 6) || 0, saturation, cMax];\n      case green:\n        return [60 * ((blue - red) / delta + 2) || 0, saturation, cMax];\n      case blue:\n        return [60 * ((red - green) / delta + 4) || 0, saturation, cMax];\n    }\n  }\n  function HSVtoHSL(hsv) {\n    var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      k = (2 - s) * v;\n    return [h, Math.round(s * v / (k < 1 ? k : 2 - k) * 10000) / 100, k / 2 * 100];\n  }\n  function stringToInteger(string) {\n    var total = 0;\n    for (var i = 0; i !== string.length; i++) {\n      if (total >= Number.MAX_SAFE_INTEGER) break;\n      total += string.charCodeAt(i);\n    }\n    return total;\n  }\n\n  // get The range of given hue when options.count!=0\n  function getRealHueRange(colorHue) {\n    if (!isNaN(colorHue)) {\n      var number = parseInt(colorHue);\n      if (number < 360 && number > 0) {\n        return getColorInfo(colorHue).hueRange;\n      }\n    } else if (typeof colorHue === 'string') {\n      if (colorDictionary[colorHue]) {\n        var color = colorDictionary[colorHue];\n        if (color.hueRange) {\n          return color.hueRange;\n        }\n      } else if (colorHue.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        var hue = HexToHSB(colorHue)[0];\n        return getColorInfo(hue).hueRange;\n      }\n    }\n    return [0, 360];\n  }\n  return randomColor;\n});","map":{"version":3,"names":["root","factory","exports","randomColor","module","define","amd","seed","colorDictionary","loadColorBounds","colorRanges","options","undefined","parseInt","stringToInteger","TypeError","H","S","B","count","totalColors","colors","i","push","length","color","pickHue","pickSaturation","pickBrightness","setFormat","hueRange","getRealHueRange","hue","randomWithin","step","j","min","max","getHueRange","luminosity","saturationRange","getSaturationRange","sMin","sMax","bMin","getMinimumBrightness","bMax","hsv","format","HSVtoHSL","hsl","hslColor","alpha","Math","random","HSVtoRGB","rgb","join","rgbColor","HSVtoHex","lowerBounds","getColorInfo","s1","v1","s2","v2","m","b","colorInput","number","match","HexToHSB","colorName","range","golden_ratio","r","floor","rnd","componentToHex","c","hex","toString","defineColor","name","brightnessRange","h","s","v","h_i","f","p","q","t","g","result","replace","red","substr","green","blue","cMax","delta","saturation","k","round","string","total","Number","MAX_SAFE_INTEGER","charCodeAt","colorHue","isNaN"],"sources":["/Users/ashokksaravanabavan/Documents/react-notepad-1/node_modules/randomcolor/randomColor.js"],"sourcesContent":["// randomColor by David Merfield under the CC0 license\n// https://github.com/davidmerfield/randomColor/\n\n;(function(root, factory) {\n\n  // Support CommonJS\n  if (typeof exports === 'object') {\n    var randomColor = factory();\n\n    // Support NodeJS & Component, which allow module.exports to be a function\n    if (typeof module === 'object' && module && module.exports) {\n      exports = module.exports = randomColor;\n    }\n\n    // Support CommonJS 1.1.1 spec\n    exports.randomColor = randomColor;\n\n  // Support AMD\n  } else if (typeof define === 'function' && define.amd) {\n    define([], factory);\n\n  // Support vanilla script loading\n  } else {\n    root.randomColor = factory();\n  }\n\n}(this, function() {\n\n  // Seed to get repeatable colors\n  var seed = null;\n\n  // Shared color dictionary\n  var colorDictionary = {};\n\n  // Populate the color dictionary\n  loadColorBounds();\n\n  // check if a range is taken\n  var colorRanges = [];\n\n  var randomColor = function (options) {\n\n    options = options || {};\n\n    // Check if there is a seed and ensure it's an\n    // integer. Otherwise, reset the seed value.\n    if (options.seed !== undefined && options.seed !== null && options.seed === parseInt(options.seed, 10)) {\n      seed = options.seed;\n\n    // A string was passed as a seed\n    } else if (typeof options.seed === 'string') {\n      seed = stringToInteger(options.seed);\n\n    // Something was passed as a seed but it wasn't an integer or string\n    } else if (options.seed !== undefined && options.seed !== null) {\n      throw new TypeError('The seed value must be an integer or string');\n\n    // No seed, reset the value outside.\n    } else {\n      seed = null;\n    }\n\n    var H,S,B;\n\n    // Check if we need to generate multiple colors\n    if (options.count !== null && options.count !== undefined) {\n\n      var totalColors = options.count,\n          colors = [];\n      // Value false at index i means the range i is not taken yet.\n      for (var i = 0; i < options.count; i++) {\n        colorRanges.push(false)\n        }\n      options.count = null;\n\n      while (totalColors > colors.length) {\n\n        var color = randomColor(options);\n\n        if (seed !== null) {\n          options.seed = seed;\n        }\n\n        colors.push(color);\n      }\n\n      options.count = totalColors;\n\n      return colors;\n    }\n\n    // First we pick a hue (H)\n    H = pickHue(options);\n\n    // Then use H to determine saturation (S)\n    S = pickSaturation(H, options);\n\n    // Then use S and H to determine brightness (B).\n    B = pickBrightness(H, S, options);\n\n    // Then we return the HSB color in the desired format\n    return setFormat([H,S,B], options);\n  };\n\n  function pickHue(options) {\n    if (colorRanges.length > 0) {\n      var hueRange = getRealHueRange(options.hue)\n\n      var hue = randomWithin(hueRange)\n\n      //Each of colorRanges.length ranges has a length equal approximatelly one step\n      var step = (hueRange[1] - hueRange[0]) / colorRanges.length\n\n      var j = parseInt((hue - hueRange[0]) / step)\n\n      //Check if the range j is taken\n      if (colorRanges[j] === true) {\n        j = (j + 2) % colorRanges.length\n      }\n      else {\n        colorRanges[j] = true\n           }\n\n      var min = (hueRange[0] + j * step) % 359,\n          max = (hueRange[0] + (j + 1) * step) % 359;\n\n      hueRange = [min, max]\n\n      hue = randomWithin(hueRange)\n\n      if (hue < 0) {hue = 360 + hue;}\n      return hue\n    }\n    else {\n      var hueRange = getHueRange(options.hue)\n\n      hue = randomWithin(hueRange);\n      // Instead of storing red as two seperate ranges,\n      // we group them, using negative numbers\n      if (hue < 0) {\n        hue = 360 + hue;\n      }\n\n      return hue;\n    }\n  }\n\n  function pickSaturation (hue, options) {\n\n    if (options.hue === 'monochrome') {\n      return 0;\n    }\n\n    if (options.luminosity === 'random') {\n      return randomWithin([0,100]);\n    }\n\n    var saturationRange = getSaturationRange(hue);\n\n    var sMin = saturationRange[0],\n        sMax = saturationRange[1];\n\n    switch (options.luminosity) {\n\n      case 'bright':\n        sMin = 55;\n        break;\n\n      case 'dark':\n        sMin = sMax - 10;\n        break;\n\n      case 'light':\n        sMax = 55;\n        break;\n   }\n\n    return randomWithin([sMin, sMax]);\n\n  }\n\n  function pickBrightness (H, S, options) {\n\n    var bMin = getMinimumBrightness(H, S),\n        bMax = 100;\n\n    switch (options.luminosity) {\n\n      case 'dark':\n        bMax = bMin + 20;\n        break;\n\n      case 'light':\n        bMin = (bMax + bMin)/2;\n        break;\n\n      case 'random':\n        bMin = 0;\n        bMax = 100;\n        break;\n    }\n\n    return randomWithin([bMin, bMax]);\n  }\n\n  function setFormat (hsv, options) {\n\n    switch (options.format) {\n\n      case 'hsvArray':\n        return hsv;\n\n      case 'hslArray':\n        return HSVtoHSL(hsv);\n\n      case 'hsl':\n        var hsl = HSVtoHSL(hsv);\n        return 'hsl('+hsl[0]+', '+hsl[1]+'%, '+hsl[2]+'%)';\n\n      case 'hsla':\n        var hslColor = HSVtoHSL(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'hsla('+hslColor[0]+', '+hslColor[1]+'%, '+hslColor[2]+'%, ' + alpha + ')';\n\n      case 'rgbArray':\n        return HSVtoRGB(hsv);\n\n      case 'rgb':\n        var rgb = HSVtoRGB(hsv);\n        return 'rgb(' + rgb.join(', ') + ')';\n\n      case 'rgba':\n        var rgbColor = HSVtoRGB(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'rgba(' + rgbColor.join(', ') + ', ' + alpha + ')';\n\n      default:\n        return HSVtoHex(hsv);\n    }\n\n  }\n\n  function getMinimumBrightness(H, S) {\n\n    var lowerBounds = getColorInfo(H).lowerBounds;\n\n    for (var i = 0; i < lowerBounds.length - 1; i++) {\n\n      var s1 = lowerBounds[i][0],\n          v1 = lowerBounds[i][1];\n\n      var s2 = lowerBounds[i+1][0],\n          v2 = lowerBounds[i+1][1];\n\n      if (S >= s1 && S <= s2) {\n\n         var m = (v2 - v1)/(s2 - s1),\n             b = v1 - m*s1;\n\n         return m*S + b;\n      }\n\n    }\n\n    return 0;\n  }\n\n  function getHueRange (colorInput) {\n\n    if (typeof parseInt(colorInput) === 'number') {\n\n      var number = parseInt(colorInput);\n\n      if (number < 360 && number > 0) {\n        return [number, number];\n      }\n\n    }\n\n    if (typeof colorInput === 'string') {\n\n      if (colorDictionary[colorInput]) {\n        var color = colorDictionary[colorInput];\n        if (color.hueRange) {return color.hueRange;}\n      } else if (colorInput.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        var hue = HexToHSB(colorInput)[0];\n        return [ hue, hue ];\n      }\n    }\n\n    return [0,360];\n\n  }\n\n  function getSaturationRange (hue) {\n    return getColorInfo(hue).saturationRange;\n  }\n\n  function getColorInfo (hue) {\n\n    // Maps red colors to make picking hue easier\n    if (hue >= 334 && hue <= 360) {\n      hue-= 360;\n    }\n\n    for (var colorName in colorDictionary) {\n       var color = colorDictionary[colorName];\n       if (color.hueRange &&\n           hue >= color.hueRange[0] &&\n           hue <= color.hueRange[1]) {\n          return colorDictionary[colorName];\n       }\n    } return 'Color not found';\n  }\n\n  function randomWithin (range) {\n    if (seed === null) {\n      //generate random evenly destinct number from : https://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/\n      var golden_ratio = 0.618033988749895\n      var r=Math.random()\n      r += golden_ratio\n      r %= 1\n      return Math.floor(range[0] + r*(range[1] + 1 - range[0]));\n    } else {\n      //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n      var max = range[1] || 1;\n      var min = range[0] || 0;\n      seed = (seed * 9301 + 49297) % 233280;\n      var rnd = seed / 233280.0;\n      return Math.floor(min + rnd * (max - min));\n}\n  }\n\n  function HSVtoHex (hsv){\n\n    var rgb = HSVtoRGB(hsv);\n\n    function componentToHex(c) {\n        var hex = c.toString(16);\n        return hex.length == 1 ? '0' + hex : hex;\n    }\n\n    var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n\n    return hex;\n\n  }\n\n  function defineColor (name, hueRange, lowerBounds) {\n\n    var sMin = lowerBounds[0][0],\n        sMax = lowerBounds[lowerBounds.length - 1][0],\n\n        bMin = lowerBounds[lowerBounds.length - 1][1],\n        bMax = lowerBounds[0][1];\n\n    colorDictionary[name] = {\n      hueRange: hueRange,\n      lowerBounds: lowerBounds,\n      saturationRange: [sMin, sMax],\n      brightnessRange: [bMin, bMax]\n    };\n\n  }\n\n  function loadColorBounds () {\n\n    defineColor(\n      'monochrome',\n      null,\n      [[0,0],[100,0]]\n    );\n\n    defineColor(\n      'red',\n      [-26,18],\n      [[20,100],[30,92],[40,89],[50,85],[60,78],[70,70],[80,60],[90,55],[100,50]]\n    );\n\n    defineColor(\n      'orange',\n      [18,46],\n      [[20,100],[30,93],[40,88],[50,86],[60,85],[70,70],[100,70]]\n    );\n\n    defineColor(\n      'yellow',\n      [46,62],\n      [[25,100],[40,94],[50,89],[60,86],[70,84],[80,82],[90,80],[100,75]]\n    );\n\n    defineColor(\n      'green',\n      [62,178],\n      [[30,100],[40,90],[50,85],[60,81],[70,74],[80,64],[90,50],[100,40]]\n    );\n\n    defineColor(\n      'blue',\n      [178, 257],\n      [[20,100],[30,86],[40,80],[50,74],[60,60],[70,52],[80,44],[90,39],[100,35]]\n    );\n\n    defineColor(\n      'purple',\n      [257, 282],\n      [[20,100],[30,87],[40,79],[50,70],[60,65],[70,59],[80,52],[90,45],[100,42]]\n    );\n\n    defineColor(\n      'pink',\n      [282, 334],\n      [[20,100],[30,90],[40,86],[60,84],[80,80],[90,75],[100,73]]\n    );\n\n  }\n\n  function HSVtoRGB (hsv) {\n\n    // this doesn't work for the values of 0 and 360\n    // here's the hacky fix\n    var h = hsv[0];\n    if (h === 0) {h = 1;}\n    if (h === 360) {h = 359;}\n\n    // Rebase the h,s,v values\n    h = h/360;\n    var s = hsv[1]/100,\n        v = hsv[2]/100;\n\n    var h_i = Math.floor(h*6),\n      f = h * 6 - h_i,\n      p = v * (1 - s),\n      q = v * (1 - f*s),\n      t = v * (1 - (1 - f)*s),\n      r = 256,\n      g = 256,\n      b = 256;\n\n    switch(h_i) {\n      case 0: r = v; g = t; b = p;  break;\n      case 1: r = q; g = v; b = p;  break;\n      case 2: r = p; g = v; b = t;  break;\n      case 3: r = p; g = q; b = v;  break;\n      case 4: r = t; g = p; b = v;  break;\n      case 5: r = v; g = p; b = q;  break;\n    }\n\n    var result = [Math.floor(r*255), Math.floor(g*255), Math.floor(b*255)];\n    return result;\n  }\n\n  function HexToHSB (hex) {\n    hex = hex.replace(/^#/, '');\n    hex = hex.length === 3 ? hex.replace(/(.)/g, '$1$1') : hex;\n\n    var red = parseInt(hex.substr(0, 2), 16) / 255,\n          green = parseInt(hex.substr(2, 2), 16) / 255,\n          blue = parseInt(hex.substr(4, 2), 16) / 255;\n\n    var cMax = Math.max(red, green, blue),\n          delta = cMax - Math.min(red, green, blue),\n          saturation = cMax ? (delta / cMax) : 0;\n\n    switch (cMax) {\n      case red: return [ 60 * (((green - blue) / delta) % 6) || 0, saturation, cMax ];\n      case green: return [ 60 * (((blue - red) / delta) + 2) || 0, saturation, cMax ];\n      case blue: return [ 60 * (((red - green) / delta) + 4) || 0, saturation, cMax ];\n    }\n  }\n\n  function HSVtoHSL (hsv) {\n    var h = hsv[0],\n      s = hsv[1]/100,\n      v = hsv[2]/100,\n      k = (2-s)*v;\n\n    return [\n      h,\n      Math.round(s*v / (k<1 ? k : 2-k) * 10000) / 100,\n      k/2 * 100\n    ];\n  }\n\n  function stringToInteger (string) {\n    var total = 0\n    for (var i = 0; i !== string.length; i++) {\n      if (total >= Number.MAX_SAFE_INTEGER) break;\n      total += string.charCodeAt(i)\n    }\n    return total\n  }\n\n  // get The range of given hue when options.count!=0\n  function getRealHueRange(colorHue)\n  { if (!isNaN(colorHue)) {\n    var number = parseInt(colorHue);\n\n    if (number < 360 && number > 0) {\n      return getColorInfo(colorHue).hueRange\n    }\n  }\n    else if (typeof colorHue === 'string') {\n\n      if (colorDictionary[colorHue]) {\n        var color = colorDictionary[colorHue];\n\n        if (color.hueRange) {\n          return color.hueRange\n       }\n    } else if (colorHue.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        var hue = HexToHSB(colorHue)[0]\n        return getColorInfo(hue).hueRange\n    }\n  }\n\n    return [0,360]\n}\n  return randomColor;\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}